#!/usr/bin/env python3

from flask import Flask, render_template
from flask_socketio import SocketIO, emit
import subprocess
import os
import json

app = Flask(__name__)
app.config['SECRET_KEY'] = 'secret!'
socketio = SocketIO(app)

ALGO_BASE_DIR = os.path.join(os.path.dirname(__file__), "algo")

def get_path(algo):
    return os.path.join(ALGO_BASE_DIR, algo)


@app.route('/')
def index():
    algos = [entry.name for entry in os.scandir(ALGO_BASE_DIR)]
    return render_template('index.html', algos=algos)


@socketio.on("run")
def run(algo):
    path = get_path(algo)

    print("starting run for:", algo)
    print()
    subprocess.run(["./run"], cwd=path)
    print("run ended")
    push(algo)


@socketio.on("fetch")
def push(algo=None):
    path = get_path(algo if algo else "quicksort")
    with open(os.path.join(path, "results.txt")) as f:
        emit("update", {"data": json.load(f)})


@socketio.on("message")
def print_msg(msg):
    print(msg)


@socketio.on('connect')
def test_connect():
    emit('my response', {'data': 'Connected'})


@socketio.on('disconnect')
def test_disconnect():
    print('Client disconnected')


if __name__ == '__main__':
    socketio.run(app, debug=True, use_reloader=True)
